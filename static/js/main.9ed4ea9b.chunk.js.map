{"version":3,"sources":["styles/index.js","components/Header/styles.js","components/Header/index.js","utils/format.js","services/api.js","store/modules/cart/actions.js","pages/Home/styles.js","pages/Home/index.js","pages/Cart/styles.js","pages/Cart/index.js","routes.js","services/history.js","store/modules/rootReducer.js","store/modules/cart/reducer.js","store/modules/cart/sagas.js","store/modules/rootSaga.js","store/index.js","App.js","index.js","assets/images/background.svg","assets/images/logo.svg"],"names":["createGlobalStyle","background","Container","styled","header","Cart","Link","connect","state","cartTotal","cart","length","to","src","logo","alt","size","color","formatPrice","Intl","NumberFormat","style","currency","format","api","axios","create","baseURL","process","addToCartRequest","id","type","addToCartSuccess","product","removeFromCart","updateAmountRequest","amount","updateAmountSuccess","ProductList","ul","darken","Home","props","handleAddProduct","products","get","response","data","map","priceFormatted","price","this","setState","amountItem","key","image","title","onClick","Component","reduce","dispatch","bindActionCreators","CartActions","div","ProductTable","table","Total","subTotal","totalValue","total","decrement","readOnly","value","increment","Routes","path","exact","component","history","createBrowserHistory","combineReducers","action","produce","draft","push","productIndex","findIndex","splice","Number","addToCart","updateAmount","select","find","p","productExists","call","stock","stockAmount","currentAmount","toast","error","put","all","takeLatest","rootSaga","sagaMiddleware","createSagaMiddleware","sagaMonitor","enhancer","applyMiddleware","store","createStore","rootReducer","run","App","basename","autoClose","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9ed4ea9b.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nimport 'react-toastify/dist/ReactToastify.css';\nimport background from '../assets/images/background.svg';\n\nexport default createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Roboto&display=swap');\n\n\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background: #191920 url(${background}) no-repeat center top;\n    -webkit-font-smoothing: antialiased !important;\n  }\n\n  body, input, button {\n    font: 14px 'Roboto', sans-serif;\n  }\n\n  #root {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 0 20px 50px;\n  }\n\n  button {\n    cursor: pointer;\n  }\n\n\n\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.header`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 50px 0;\n`;\n\nexport const Cart = styled(Link)`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  transition: opacity 0.2s ease-in-out;\n\n  &:hover {\n    opacity: 0.7;\n  }\n\n  div {\n    text-align: right;\n    margin-right: 10px;\n\n    strong {\n      display: block;\n      color: #fff;\n    }\n\n    span {\n      font-size: 12px;\n      color: #999;\n    }\n  }\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { MdShoppingBasket } from 'react-icons/md';\n\nimport { Container, Cart } from './styles';\n\nimport logo from '../../assets/images/logo.svg';\n\nfunction Header({ cartTotal }) {\n  return (\n    <Container>\n      <Link to=\"/\">\n        <img src={logo} alt=\"kindshoes\" />\n      </Link>\n      <Cart to=\"/cart\">\n        <div>\n          <strong>Meu carrinho</strong>\n          <span>{cartTotal} itens</span>\n        </div>\n        <MdShoppingBasket size={36} color=\"#fff\" />\n      </Cart>\n    </Container>\n  );\n}\n\nexport default connect(state => ({\n  cartTotal: state.cart.length,\n}))(Header);\n","export const { format: formatPrice } = new Intl.NumberFormat('pt-BR', {\n  style: 'currency',\n  currency: 'BRL',\n});\n","import 'dotenv/config';\n\nimport axios from 'axios';\n\nconst DEV = !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\n\nconst api = axios.create({\n  baseURL: DEV ? process.env.REACT_APP_DEV_URL : process.env.REACT_APP_PROD_URL,\n});\n\nexport default api;\n","export function addToCartRequest(id) {\n  return {\n    type: '@cart/ADD_REQUEST',\n    id,\n  };\n}\n\nexport function addToCartSuccess(product) {\n  return {\n    type: '@cart/ADD_SUCCESS',\n    product,\n  };\n}\n\nexport function removeFromCart(id) {\n  return {\n    type: '@cart/REMOVE',\n    id,\n  };\n}\n\nexport function updateAmountRequest(id, amount) {\n  return {\n    type: '@cart/UPDATE_AMOUNT_REQUEST',\n    id,\n    amount,\n  };\n}\n\nexport function updateAmountSuccess(id, amount) {\n  return {\n    type: '@cart/UPDATE_AMOUNT_SUCCESS',\n    id,\n    amount,\n  };\n}\n","import styled from 'styled-components';\nimport { darken } from 'polished';\n\nexport const ProductList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 20px;\n  list-style: none;\n\n  li {\n    display: flex;\n    flex-direction: column;\n    background: #fff;\n    border-radius: 4px;\n    padding: 20px;\n\n    img {\n      align-self: center;\n      max-width: 250px;\n    }\n\n    > strong {\n      font-size: 16px;\n      line-height: 20px;\n      color: #333;\n      margin-top: 5px;\n    }\n\n    > span {\n      font-size: 21px;\n      font-weight: bold;\n      margin: 5px 0 20px;\n    }\n\n    button {\n      background: #7159c1;\n      color: #fff;\n      border: 0;\n      border-radius: 4px;\n      overflow: hidden;\n      margin-top: auto;\n      transition: all 0.2s;\n\n      display: flex;\n      align-items: center;\n\n      &:hover {\n        background: ${darken(0.03, '#7159c1')};\n      }\n\n      div {\n        display: flex;\n        align-items: center;\n        padding: 12px;\n        background: rgba(0, 0, 0, 0.1);\n\n        svg {\n          margin-right: 5px;\n        }\n      }\n\n      span {\n        flex: 1;\n        text-align: center;\n        font-weight: bold;\n      }\n    }\n  }\n`;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { MdAddShoppingCart } from 'react-icons/md';\nimport { formatPrice } from '../../utils/format';\n\nimport api from '../../services/api';\n\nimport * as CartActions from '../../store/modules/cart/actions';\n\nimport { ProductList } from './styles';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: [],\n    };\n  }\n\n  async componentDidMount() {\n    const response = await api.get('products');\n\n    const data = response.data.map(product => ({\n      ...product,\n      priceFormatted: formatPrice(product.price),\n    }));\n\n    this.setState({ products: data });\n  }\n\n  handleAddProduct = id => {\n    const { addToCartRequest } = this.props;\n\n    addToCartRequest(id);\n  };\n\n  render() {\n    const { products } = this.state;\n    const { amountItem } = this.props;\n    return (\n      <ProductList>\n        {products.map(product => (\n          <li key={product.id}>\n            <img src={product.image} alt={product.title} />\n            <strong>{product.title}</strong>\n            <span>{product.priceFormatted}</span>\n\n            <button\n              type=\"button\"\n              onClick={() => this.handleAddProduct(product.id)}\n            >\n              <div>\n                <MdAddShoppingCart size={16} color=\"#FFF\" />\n                {amountItem[product.id] || 0}\n              </div>\n              <span>ADICIONAR AO CARRINHO</span>\n            </button>\n          </li>\n        ))}\n      </ProductList>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  amountItem: state.cart.reduce((amount, product) => {\n    amount[product.id] = product.amount;\n\n    return amount;\n  }, {}),\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(CartActions, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Home);\n","import styled from 'styled-components';\nimport { darken } from 'polished';\n\nexport const Container = styled.div`\n  padding: 30px;\n  background: #fff;\n  border-radius: 4px;\n\n  footer {\n    margin-top: 30px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    button {\n      background: #7159c1;\n      color: #fff;\n      border: 0;\n      border-radius: 4px;\n      padding: 12px 20px;\n      font-weight: bold;\n      text-transform: uppercase;\n      transition: all 0.2s;\n\n      &:hover {\n        background: ${darken(0.03, '#7159c1')};\n      }\n    }\n  }\n`;\n\nexport const ProductTable = styled.table`\n  width: 100%;\n\n  thead th {\n    color: #999;\n    text-align: left;\n    padding: 12px;\n  }\n\n  tbody td {\n    padding: 12px;\n    border-bottom: 1px solid #eee;\n  }\n\n  img {\n    height: 100px;\n  }\n\n  strong {\n    color: #333;\n    display: block;\n  }\n\n  span {\n    display: block;\n    margin-top: 5px;\n    font-size: 19px;\n    font-weight: bold;\n  }\n\n  div {\n    display: flex;\n    align-items: center;\n\n    input {\n      border: 1px solid #ddd;\n      border-radius: 4px;\n      color: #666;\n      padding: 6px;\n      width: 50px;\n    }\n  }\n\n  button {\n    background: none;\n    border: 0;\n    padding: 6px;\n  }\n`;\n\nexport const Total = styled.div`\n  display: flex;\n  align-items: baseline;\n\n  span {\n    color: #999;\n    font-weight: bold;\n  }\n\n  strong {\n    font-size: 28px;\n    margin-left: 5px;\n  }\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {\n  MdRemoveCircleOutline,\n  MdAddCircleOutline,\n  MdDelete,\n} from 'react-icons/md';\n\nimport { formatPrice } from '../../utils/format';\n\nimport * as CartActions from '../../store/modules/cart/actions';\n\nimport { Container, ProductTable, Total } from './styles';\n\nfunction Cart({ cart, totalValue, removeFromCart, updateAmountRequest }) {\n  function increment(product) {\n    updateAmountRequest(product.id, product.amount + 1);\n  }\n\n  function decrement(product) {\n    updateAmountRequest(product.id, product.amount - 1);\n  }\n\n  return (\n    <Container>\n      <ProductTable>\n        <thead>\n          <tr>\n            <th />\n            <th>PRODUTO</th>\n            <th>QTD</th>\n            <th>SUBTOTAL</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>\n          {cart.map(product => (\n            <tr>\n              <td>\n                <img src={product.image} alt={product.title} />\n              </td>\n              <td>\n                <strong>{product.title}</strong>\n                <span>{product.priceFormatted}</span>\n              </td>\n              <td>\n                <div>\n                  <button type=\"button\" onClick={() => decrement(product)}>\n                    <MdRemoveCircleOutline size={20} color=\"#7159c1\" />\n                  </button>\n                  <input type=\"text\" readOnly value={product.amount} />\n                  <button type=\"button\" onClick={() => increment(product)}>\n                    <MdAddCircleOutline size={20} color=\"#7159c1\" />\n                  </button>\n                </div>\n              </td>\n              <td>\n                <strong>{product.subTotal}</strong>\n              </td>\n              <td>\n                <button\n                  type=\"button\"\n                  onClick={() => removeFromCart(product.id)}\n                >\n                  <MdDelete size={20} color=\"7159c1\" />\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </ProductTable>\n      <footer>\n        <button type=\"button\">Finalizar pedido</button>\n\n        <Total>\n          <span>Total</span>\n          <strong>{totalValue}</strong>\n        </Total>\n      </footer>\n    </Container>\n  );\n}\n\nconst mapStateToProps = state => ({\n  cart: state.cart.map(product => ({\n    ...product,\n    subTotal: formatPrice(product.price * product.amount),\n  })),\n  totalValue: formatPrice(\n    state.cart.reduce((total, product) => {\n      return total + product.price * product.amount;\n    }, 0)\n  ),\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(CartActions, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Cart);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Cart from './pages/Cart';\n\nexport default function Routes() {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/cart\" component={Cart} />\n    </Switch>\n  );\n}\n","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","import { combineReducers } from 'redux';\n\nimport cart from './cart/reducer';\n\nexport default combineReducers({\n  cart,\n});\n","import produce from 'immer';\n\nexport default function cart(state = [], action) {\n  switch (action.type) {\n    case '@cart/ADD_SUCCESS':\n      return produce(state, draft => {\n        const { product } = action;\n        draft.push(product);\n      });\n\n    case '@cart/REMOVE':\n      return produce(state, draft => {\n        const productIndex = draft.findIndex(\n          product => product.id === action.id\n        );\n\n        if (productIndex >= 0) {\n          draft.splice(productIndex, 1);\n        }\n      });\n\n    case '@cart/UPDATE_AMOUNT_SUCCESS': {\n      return produce(state, draft => {\n        const productIndex = draft.findIndex(\n          product => product.id === action.id\n        );\n\n        if (productIndex >= 0) {\n          draft[productIndex].amount = Number(action.amount);\n        }\n      });\n    }\n\n    default:\n      return state;\n  }\n}\n","import { call, select, put, all, takeLatest } from 'redux-saga/effects';\nimport { toast } from 'react-toastify';\n\nimport api from '../../../services/api';\nimport history from '../../../services/history';\nimport { formatPrice } from '../../../utils/format';\n\nimport { addToCartSuccess, updateAmountSuccess } from './actions';\n\nfunction* addToCart({ id }) {\n  const productExists = yield select(state =>\n    state.cart.find(p => p.id === id)\n  );\n\n  const stock = yield call(api.get, `/stock/${id}`);\n\n  const stockAmount = stock.data.amount;\n  const currentAmount = productExists ? productExists.amount : 0;\n\n  const amount = currentAmount + 1;\n\n  if (amount > stockAmount) {\n    toast.error('Quantidade solicitada fora de estoque!');\n    return;\n  }\n\n  if (productExists) {\n    yield put(updateAmountSuccess(id, amount));\n  } else {\n    const response = yield call(api.get, `/products/${id}`);\n\n    const data = {\n      ...response.data,\n      amount: 1,\n      priceFormatted: formatPrice(response.data.price),\n    };\n\n    yield put(addToCartSuccess(data));\n    history.push('/cart');\n  }\n}\n\nfunction* updateAmount({ id, amount }) {\n  if (amount <= 0) return;\n\n  const stock = yield call(api.get, `/stock/${id}`);\n  const stockAmount = stock.data.amount;\n\n  if (amount > stockAmount) {\n    toast.error('Quantidade solicitada fora de estoque!');\n    return;\n  }\n\n  yield put(updateAmountSuccess(id, amount));\n}\n\nexport default all([\n  takeLatest('@cart/ADD_REQUEST', addToCart),\n  takeLatest('@cart/UPDATE_AMOUNT_REQUEST', updateAmount),\n]);\n","import { all } from 'redux-saga/effects';\n\nimport cart from './cart/sagas';\n\nexport default function* rootSaga() {\n  return yield all([cart]);\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './modules/rootReducer';\nimport rootSaga from './modules/rootSaga';\n\nconst sagaMonitor =\n  process.env.NODE_ENV === 'development'\n    ? console.tron.createSagaMonitor()\n    : null;\nconst sagaMiddleware = createSagaMiddleware({\n  sagaMonitor,\n});\n\nconst enhancer =\n  process.env.NODE_ENV === 'development'\n    ? compose(\n        console.tron.createEnhancer(),\n        applyMiddleware(sagaMiddleware)\n      )\n    : applyMiddleware(sagaMiddleware);\n\nconst store = createStore(rootReducer, enhancer);\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import 'dotenv/config';\nimport './config/ReactotronConfig';\n\nimport React from 'react';\nimport { Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\n\nimport GlobalStyle from './styles';\nimport Header from './components/Header';\nimport Routes from './routes';\n\nimport history from './services/history';\n\nimport store from './store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router history={history} basename={process.env.PUBLIC_URL}>\n        <Header />\n        <Routes />\n        <GlobalStyle />\n        <ToastContainer autoClose={2000} />\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/background.3c9a1ce5.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.13e445a6.svg\";"],"sourceRoot":""}